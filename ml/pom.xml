<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.ibm.analytics.wml</groupId>
    <artifactId>wml-parent</artifactId>
    <version>1.2</version>
  </parent>

  <groupId>com.ibm.ml.repository.v4</groupId>
  <artifactId>ml-repository-parent</artifactId>
  <version>2.0.1</version>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <ml.repository.api.version>4.0.0</ml.repository.api.version>

    <!-- we compile with jdk11 and scala 2.13 -->
    <java.release.version>1.8</java.release.version>
    <maven.compiler.target>${java.release.version}</maven.compiler.target>
    <maven.compiler.source>${java.release.version}</maven.compiler.source>
    <scala.compat.version>2.13</scala.compat.version>
    <scala.version>${scala.compat.version}.4</scala.version>
    <scala-test.version>3.2.3</scala-test.version>
    <mockito-version>3.7.7</mockito-version>

    <!-- for plugins -->
    <scala-maven-plugin.version>4.3.1</scala-maven-plugin.version>
    <scalatest.plugin.version>2.0.2</scalatest.plugin.version>
    <scoverage.plugin.version>1.4.1</scoverage.plugin.version>
    <scalastyle.plugin.version>1.0.0</scalastyle.plugin.version>
    <antrun.plugin.version>3.0.0</antrun.plugin.version>
    <process-exec.plugin.version>0.9.2</process-exec.plugin.version>

    <scoverage.aggregate>true</scoverage.aggregate>
    <scoverage.aggregateOnly>false</scoverage.aggregateOnly>
    <dependency-check-maven.version>6.0.3</dependency-check-maven.version>

    <akka.version>2.6.14</akka.version>
    <akka.http.version>10.2.4</akka.http.version>

    <apache.httpcore.version>4.4.13</apache.httpcore.version>
    <apache.httpclient.version>4.5.13</apache.httpclient.version>

    <!-- http://maven.apache.org/enforcer/enforcer-rules/versionRanges.html -->
    <!-- during development we just get the latest version                  -->
    <!-- this [1.0.118,) can be used to fix the version to 1.0.118          -->
    <!-- [1.0.118,1.0.119) - which means 1.0.118 <= x < 1.0.119             -->
    <ml-service.version>[1.0.1066,1.0.9999)</ml-service.version>

    <cloudant.version>2.19.1</cloudant.version>

    <scala.logging.version>3.9.2</scala.logging.version>
    <slf4j.version>1.7.30</slf4j.version>
    <log4j2.version>2.14.0</log4j2.version>

    <jmeter.plugin.version>3.2.0</jmeter.plugin.version>
    <jmeter.version>5.4</jmeter.version>

    <project.finalVersion>${project.version}</project.finalVersion>

    <!-- <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/${aggregate.report.dir}</sonar.coverage.jacoco.xmlReportPaths> -->

    <!-- classpath checking -->
    <skip.duplicates>false</skip.duplicates>
    <check.compile.classpath>true</check.compile.classpath>
    <check.runtime.classpath>true</check.runtime.classpath>
    <check.test.classpath>false</check.test.classpath>

    <!-- tests -->
    <tests.parallel>true</tests.parallel>
    <tags.to.exclude/>
    <tags.to.include/>
    <tests.stdout.coloring/>
    <tests.wildcard.suites/>
    <tests.fork.mode>once</tests.fork.mode>
  </properties>

  <!-- Julian 22 Feb 2021 - for some reason we need to specify this here now in order to find the parent pom -->
  <repositories>
    <repository>
      <id>analytics.maven.build</id>
      <url>https://na.artifactory.swg-devops.com:443/artifactory/hyc-wml-devops-team-ngp-build-maven-local</url>
    </repository>
  </repositories>

  <modules>
    <module>utils</module>
    <module>tests</module>
    <module>migration</module>
    <module>service</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-s3</artifactId>
        <version>1.11.82</version>
      </dependency>

      <!-- our modules -->
      <dependency>
        <groupId>com.ibm.ml.repository.v4</groupId>
        <artifactId>utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.ml.repository.v4</groupId>
        <artifactId>tests</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.ml.repository.v4</groupId>
        <artifactId>migration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.ml.repository.v4</groupId>
        <artifactId>service</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- this is the Apache bridge -->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.scala-logging</groupId>
        <artifactId>scala-logging_${scala.compat.version}</artifactId>
        <version>${scala.logging.version}</version>
      </dependency>

      <!-- cloudant -->
      <dependency>
        <groupId>com.cloudant</groupId>
        <artifactId>cloudant-client</artifactId>
        <version>${cloudant.version}</version>
      </dependency>

      <!-- the utils-lib libraries -->
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-utils-service_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
          </exclusion>
          <exclusion>
            <groupId>kr.motd.maven</groupId>
            <artifactId>os-maven-plugin</artifactId>
          </exclusion>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.ibm.wdp.common</groupId>
            <artifactId>wdp-activity-tracker-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-utils-common_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-containers-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-utils-api_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-http-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-cams-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-environments-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-repo-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-kube-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-instrumentation-client_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
      </dependency>

      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>1.4.0</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-actor_${scala.compat.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http_${scala.compat.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-stream_${scala.compat.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http-spray-json_${scala.compat.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-slf4j_${scala.compat.version}</artifactId>
        <version>${akka.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- tests -->
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.compat.version}</artifactId>
        <version>${scala-test.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito-version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.ibm.analytics.wml.ml-utils</groupId>
        <artifactId>ml-test-framework_${scala.compat.version}</artifactId>
        <version>${ml-service.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.zip</exclude>
          <exclude>**/*.gz</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.zip</include>
          <include>**/*.gz</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.zip</exclude>
          <exclude>**/*.gz</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.zip</include>
          <include>**/*.gz</include>
        </includes>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <skip>true</skip>
            <skipMain>true</skipMain>
            <source>${java.release.version}</source>
            <target>${java.release.version}</target>
            <compilerVersion>${java.release.version}</compilerVersion>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-help-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>4.4.0</version>
          <configuration>
            <args>
              <arg>-feature</arg>
              <arg>-deprecation</arg>
              <!-- <arg>-nobootcp</arg> -->
              <!-- <arg>-explaintypes</arg> -->
              <!-- <arg>-Ymacro-annotations</arg> -->
            </args>
            <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>${scalatest.plugin.version}</version>
          <configuration>
            <logForkedProcessCommand>true</logForkedProcessCommand>
            <forkMode>once</forkMode>
            <stdout>${tests.stdout.coloring}</stdout> <!-- Skip coloring output -->
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <junitxml>${project.build.directory}</junitxml>
            <!-- <htmlreporters>${project.build.directory}/html/scalatest</htmlreporters> requires pegdown -->
            <testFailureIgnore>false</testFailureIgnore>
            <tagsToExclude>${tags.to.exclude}</tagsToExclude>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.scoverage</groupId>
          <artifactId>scoverage-maven-plugin</artifactId>
          <version>${scoverage.plugin.version}</version>
          <configuration>
            <aggregate>${scoverage.aggregate}</aggregate>
            <aggregateOnly>${scoverage.aggregateOnly}</aggregateOnly>
            <highlighting>true</highlighting>
            <minimumCoverage>30</minimumCoverage>
            <failOnMinimumCoverage>false</failOnMinimumCoverage>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.honton.chas</groupId>
          <artifactId>process-exec-maven-plugin</artifactId>
          <version>${process-exec.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.scalastyle</groupId>
          <artifactId>scalastyle-maven-plugin</artifactId>
          <version>1.0.0</version>
          <configuration>
            <verbose>false</verbose>
            <failOnViolation>true</failOnViolation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <failOnWarning>false</failOnWarning>
            <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
            <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
            <!--suppress UnresolvedMavenProperty -->
            <configLocation>${project.parent.basedir}/scalastyle-config.xml</configLocation>
            <inputEncoding>UTF-8</inputEncoding>
            <outputEncoding>UTF-8</outputEncoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>at.nonblocking</groupId>
          <artifactId>nonsnapshot-maven-plugin</artifactId>
          <version>4.0.2-IBM</version>
          <configuration>
            <baseVersion>${project.finalVersion}</baseVersion>
            <scmType>GIT</scmType>
            <!--suppress UnresolvedMavenProperty -->
            <scmUser>${scmUser}</scmUser>
            <deferPomCommit>true</deferPomCommit>
            <generateIncrementalBuildScripts>true</generateIncrementalBuildScripts>
            <generateChangedProjectsPropertyFile>true</generateChangedProjectsPropertyFile>
            <ignoreTimestampQualifier>true</ignoreTimestampQualifier>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${antrun.plugin.version}</version>
          <inherited>true</inherited>
          <dependencies>
            <dependency>
              <groupId>org.apache.ant</groupId>
              <artifactId>ant</artifactId>
              <version>1.10.9</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>1.5.0</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>${jmeter.plugin.version}</version>
          <configuration>
            <jmeterVersion>${jmeter.version}</jmeterVersion>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>at.nonblocking</groupId>
        <artifactId>nonsnapshot-maven-plugin</artifactId>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.6.0,)</version>
                </requireMavenVersion>
                <!--
                <requireJavaVersion>
                  <version>[11.0,)</version>
                </requireJavaVersion>
                -->
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>show-profiles</id>
            <phase>compile</phase>
            <goals>
              <goal>active-profiles</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>default</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <printEqualFiles>false</printEqualFiles>
          <failBuildInCaseOfDifferentContentConflict>false</failBuildInCaseOfDifferentContentConflict>
          <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
          <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
          <checkCompileClasspath>${check.compile.classpath}</checkCompileClasspath>
          <checkRuntimeClasspath>${check.runtime.classpath}</checkRuntimeClasspath>
          <checkTestClasspath>${check.test.classpath}</checkTestClasspath>
          <skip>${skip.duplicates}</skip>
          <quiet>false</quiet>
          <preferLocal>true</preferLocal>
          <useResultFile>true</useResultFile>
          <resultFileMinClasspathCount>2</resultFileMinClasspathCount>
          <resultFile>${project.build.directory}/duplicate-finder-result.xml</resultFile>
          <ignoredClassPatterns>
            <ignoredClassPattern>META-INF.versions.9.module-info</ignoredClassPattern>
          </ignoredClassPatterns>
          <useDefaultResourceIgnoreList>true</useDefaultResourceIgnoreList>
          <ignoredResourcePatterns>
            <ignoredResourcePattern>reference.conf</ignoredResourcePattern>
            <ignoredResourcePattern>rootdoc.txt</ignoredResourcePattern>
            <ignoredResourcePattern>LICENSE-2.0.txt</ignoredResourcePattern>
            <ignoredResourcePattern>log4j.properties</ignoredResourcePattern>
            <ignoredResourcePattern>google/protobuf/[^.]+.proto$</ignoredResourcePattern>
          </ignoredResourcePatterns>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${antrun.plugin.version}</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>show-environment</id>
            <phase>validate</phase>
            <configuration>
              <target>s
                <echoproperties>
                  <propertyset>
                    <propertyref prefix="java."/>
                  </propertyset>
                </echoproperties>
                <property environment="env"/>
                <!--suppress UnresolvedMavenProperty -->
                <echo>JAVA_HOME = ${env.JAVA_HOME}</echo>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>coverage</id>
      <properties>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.scoverage</groupId>
            <artifactId>scoverage-maven-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <id>scoverage</id>
                <phase>prepare-package</phase>
                <configuration>
                  <additionalForkedProjectProperties>skipTests=false</additionalForkedProjectProperties>
                </configuration>
                <goals>
                  <goal>integration-check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.scoverage</groupId>
            <artifactId>scoverage-maven-plugin</artifactId>
            <version>${scoverage.plugin.version}</version>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>effective-poms</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-help-plugin</artifactId>
            <version>3.2.0</version>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>save-effective-pom</id>
                <phase>initialize</phase>
                <configuration>
                  <verbose>true</verbose>
                  <output>${project.build.directory}/effective-pom.xml</output>
                </configuration>
                <goals>
                  <goal>effective-pom</goal>
                </goals>
              </execution>
              <execution>
                <id>save-effective-settings</id>
                <phase>initialize</phase>
                <configuration>
                  <output>${project.build.directory}/effective-settings.xml</output>
                </configuration>
                <goals>
                  <goal>effective-settings</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>check-versions</id>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <configuration>
              <allowAnyUpdates>false</allowAnyUpdates>
              <allowMajorUpdates>true</allowMajorUpdates>
              <allowMinorUpdates>true</allowMinorUpdates>
              <allowIncrementalUpdates>true</allowIncrementalUpdates>
              <allowSnapshots>false</allowSnapshots>
            </configuration>
            <executions>
              <execution>
                <id>check-versions</id>
                <phase>validate</phase>
                <goals>
                  <goal>display-property-updates</goal>
                  <goal>display-dependency-updates</goal>
                  <goal>display-plugin-updates</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>run-local</id>
      <build>
        <defaultGoal>install</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>debug-local</id>
      <build>
        <defaultGoal>install</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>sequential</id>
      <properties>
        <tests.parallel>false</tests.parallel>
      </properties>
    </profile>
    <profile>
      <id>build-docker-zip</id>
      <properties>
        <docker-dir>service/docker/target</docker-dir>
        <docker-zip>docker.zip</docker-zip>
      </properties>
      <!-- Julian 22 Feb 2021 - for some reason we need to specify this here now in order to find the parent pom -->
      <repositories>
        <repository>
          <id>analytics.maven.build</id>
          <url>https://na.artifactory.swg-devops.com:443/artifactory/hyc-wml-devops-team-ngp-build-maven-local</url>
        </repository>
      </repositories>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${antrun.plugin.version}</version>
            <inherited>false</inherited>
            <executions>
              <execution>
                <id>build-docker-zip</id>
                <phase>validate</phase>
                <configuration>
                  <target>
                    <echo>Creating the docker zip file...</echo>
                    <delete dir="${docker-dir}" quiet="true"/>
                    <mkdir dir="${docker-dir}/lib"/>
                    <mkdir dir="${docker-dir}/migration-lib"/>
                    <copy file="service/target/service-${project.version}.jar"
                          tofile="${docker-dir}/lib/${project.groupId}.service-${project.version}.jar"/>
                    <copy file="migration/target/migration-${project.version}.jar"
                          tofile="${docker-dir}/migration-lib/${project.groupId}.migration-${project.version}.jar"/>
                    <copy todir="${docker-dir}/lib" flatten="true">
                      <fileset dir=".">
                        <include name="service/target/lib/*.jar"/>
                      </fileset>
                    </copy>
                    <copy todir="${docker-dir}/migration-lib" flatten="true">
                      <fileset dir=".">
                        <include name="migration/target/lib/*.jar"/>
                      </fileset>
                    </copy>
                    <delete file="${docker-zip}" quiet="true"/>
                    <zip destfile="${docker-zip}"
                         encoding="UTF-8"
                         whenempty="fail"
                         duplicate="fail">
                      <fileset dir="service">
                        <include name="docker/**"/>
                      </fileset>
                    </zip>
                    <echo>Created zip ${docker-zip}</echo>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>owasp-dependency-check</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${dependency-check-maven.version}</version>
            <configuration>
              <failBuildOnCVSS>7</failBuildOnCVSS>
              <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
