<?xml version="1.0" standalone="yes"?>
<scalastyle commentFilter="enabled">
  <name>Scalastyle rules for V4 Repsoitory</name>
  <check enabled="true" class="org.scalastyle.file.RegexChecker" level="error">
    <parameters>
      <parameter name="regex">org\.apache\.log4j\.</parameter>
      <parameter name="line">false</parameter>
    </parameters>
    <customMessage>Must use logj42</customMessage>
  </check>

  <check enabled="true" class="org.scalastyle.file.FileTabChecker" level="error"/>

  <check enabled="true" class="org.scalastyle.file.HeaderMatchesChecker" level="error">
    <customMessage>Failed to find a valid copyright at start of file</customMessage>
    <parameters>
      <parameter name="regex">false</parameter>
      <parameter name="header"><![CDATA[/*
 * IBM Confidential
 * OCO Source Materials]]></parameter>
    </parameters>
  </check>

  <check enabled="true" class="org.scalastyle.scalariform.TodoCommentChecker" level="info">
    <parameters>
      <parameter value="TODO" type="string" name="words"/>
    </parameters>
    <customMessage>Found TODO</customMessage>
  </check>

  <check enabled="true" class="org.scalastyle.scalariform.TodoCommentChecker" level="warning">
    <parameters>
      <parameter value="FIXME" type="string" name="words"/>
    </parameters>
    <customMessage>Found FIXME - use TODO</customMessage>
  </check>

  <check enabled="true" class="org.scalastyle.scalariform.DeprecatedJavaChecker" level="warning"/>

  <!-- comment filters
  If you wish to turn off checking for a section of code, you can put a comment in the source before and after the section, with the following syntax:

  // scalastyle:off
  ...
  // naughty stuff
  ...
  // scalastyle:on

  You can switch off checking for a single line using a comment at the end of the line:

  naughty()  // scalastyle:ignore

  You can also switch off checking for a specific rule by specifying the id of the rule to ignore:

  // scalastyle:off magic.number
  var foobar = 134
  // scalastyle:on magic.number
  -->
</scalastyle>
